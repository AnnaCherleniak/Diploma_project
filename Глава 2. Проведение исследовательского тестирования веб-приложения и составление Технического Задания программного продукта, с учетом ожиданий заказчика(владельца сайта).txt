2.1 Особенности Исследовательского тестирования

Исследовательское тестирование – это одновременное изучение программы, проектирование и выполнение тестов. Этот подход — противоположность сценарного, когда список проверок составлен до проведения тестирования. Исследовательские тесты не определены заранее и не выполняются в точном соответствии с планом. Исследовательское тестирование — это не методика тестирования. Это подход или образ мыслей, который можно применить к любой методике. Исследовательское тестирование не должно выполняться небрежно, в спешке. Такой подход требует тщательной подготовки, а знания и умения тестировщика — важная форма этой подготовки. Исследовательское тестирование может проводиться как вручную, так и со вспомогательными инструментами.

Когда применять исследовательское тестирование?
● Нужна быстрая обратная связь о новом продукте.
● Нужно быстро изучить продукт.
● Сценарное тестирование не находит баги, требует разнообразия.
● Нужно принять решение о необходимости покрытия области сценарными тестами.
● Требований нет, они неполные или устарели.
● Продукт маленький, разработка тестовых сценариев займёт больше времени, чем сам процесс тестирования.

Преимущества исследовательского тестирования
1. Нестандартные ходы выявляют нестандартные дефекты.
2. Не тратится время на описание всех сценариев.
3. Не нужна поддержка тестовых сценариев.
4. Не наступает «эффект пестицида».
5. Можно тестировать без требований.
6. Тесты могут стать интереснее и креативнее.

Ограничения для исследовательского тестирования
Чистое исследовательское тестирование хорошо работает на небольших краткосрочных проектах или на начальных этапах жизни продукта. В первом случае объёмная тестовая документация может не оправдать времени, затраченного на её написание. Во втором — требования могут быть очень размытыми, так как нет определённости, в каком направлении будет двигаться разработка. Функциональность будет меняться, так что потребуется постоянная актуализация тест-кейсов.

Как организовать исследовательское тестирование?
2.1.1 Идея туров в исследовательском тестировании. Туры Джеймса Виттакера.(12)
Чтобы систематизировать исследовательское тестирование можно использовать идею туров.  Туры – это идеи и инструкции по исследованию программного продукта, объединенные определённой общей темой или целью. Туры, как правило, ограничены по времени – длительность тестовой сессии не должна превышать 4 часа.
Джеймс Виттакер, хоть и не придумал саму идею туров, но предложил свой подход к исследовательскому тестированию с использованием туров и в своей книге “Exploratory Software Testing” в доступной форме озвучил идею туров и описал сами туры.
Тур – это своего рода план тестирования, он отражает основные цели и задачи, на которых будет сконцентрировано внимание тестировщика во время сессии исследовательского тестирования. При этом Виттакер использует метафору, что тестировщик – это турист, а тестируемое приложение – это город. Обычно у туриста (тестировщика) мало времени, поэтому он выполняет конкретную задачу в рамках выбранного тура, ни на что другое не отвлекаясь. Город (ПО) разбит на  районы: бизнес-районы, исторический район, район развлечений, туристический район, район отелей, захудалый район.

Туры
1. Бизнес-районы

Это места, где «делается бизнес». Они начинаются с запуска кода и до завершения его работы. В них расположены функции, ради которых пользователи и используют данное приложение. Это «задняя стенка коробки», которая является главной при демонстрации коммерческой ценности продукта, а также код, который это поддерживает.

Тур по путеводителю

Путеводители часто содержат много информации о местах, которые можно посмотреть. Они рассказывают о лучших отелях, торговых комплексах и привлекательных местах без подробных деталей. Эксперты, посетившие эти места, любезно скажут туристам, как именно нужно наслаждаться этими местами. Здесь должно быть красиво, чисто, безопасно, чтобы туристы могли спокойно тратить свои деньги. Это очень важные места, и они должны быть включены в тестовую стратегию исследовательского тестирования. Мы должны заботиться о том, чтобы пользователи получали пользу и удовольствие от работы здесь.

Вариантом такого тура является строгое следование руководству пользователя, предоставленное (если предоставлено) производителем, в котором даны описания ключевых функций. Цель в том, чтобы пройти все сценарии, которые описаны в руководстве пользователя, так полно, как это возможно. Зачастую здесь можно найти различные советы по входным данным и навигации по интерфейсу в процессе использования функций. Помимо самой функциональности этот тур позволяет проверить и то, насколько точно и аккуратно составлено руководство пользователя.

Разновидностями тура также являются тур блоггера, который содержит советы третьей стороны, а также тур эксперта, который рассматривает отзывы неудовлетворенных пользователей. Этому могут помочь различные форумы, новости, сообщества или даже книги (в случае, если приложение большое). Еще один полезный тур – тур конкурента, который позволяет рассмотреть приложение со стороны конкурирующей системы.

Вышеуказанные варианты тура по путеводителю позволяют оценить приложение в разрезе его разрекламированных функций. Это незамысловатые тесты, и любое отклонение от руководства должны воспринимать как ошибка. Указанный тур позволяет нам использовать функции именно в такой последовательности и взаимосвязи, в какой это будут делать сами пользователи.

Денежный тур

Каждое приложение имеет функциональность, которая, в глазах пользователя (заказчика), принесет им деньги. «Это самое привлекательно для меня» — скажет в этом случае пользователь. «Денежная» функциональность несет с собой «денежную силу». Сюда входят различные нюансы использования продукта, поскольку именно они позволяют зарабатывать деньги. Специалисты по продажам могут направлять демонстрацию продукта в сторону указанных сценариев, затрагивая то, что не было четко зафиксировано в документации к продукту. Такое «продажное видение» – отличная основа для денежного тура.

В указанном туре важно услышать то, как специалисты по продажам преподносят продукт, и пройтись именно по тому, на чем ставится акцент. Во время подобного тестирования вы не только находите ошибки, но и сохраняете видение «денежной жилы» приложения.

Разновидность денежного тура – тур скептически настроенного заказчика. Проходясь по туру, вы внезапно останавливаетесь и спрашиваете: «А что, если я сделаю вот так?» или «А как мне сделать это?». «А что, если я сейчас дополню проход такими сценариями, которые выходят за рамки изначально задуманных? Возьму да включу сюда еще парочку фич!».

Еще раз: наблюдение за демонстрациями продукта в разрезе «денежной ценности», а также хорошие отношения со специалистами по продажам дают отличную возможность проводить денежные туры значительно эффективнее.

Тур по отметкам

Мы выбираем какие-либо ориентиры и осуществляем скачок к одному из них через все приложение. Например, мы выбираем ключевую функцию в качестве отметки, которую мы определили в туре по путеводителю или в денежном туре. Далее мы составляем набор из таких отметок, определяем их порядок и исследуем приложение от отметки к отметке, пока не достигнем каждой из них. Далее можно создать карту покрытия отметками. Разный порядок, разные отметки – вот поле для вариативности подобного тура.

Интеллектуальный тур

Задавайте приложению сложные, интеллектуальные вопросы. Как можно заставить работать приложение так тяжело, как это возможно? Какие фичи приблизят его к собственному лимиту? Какой ввод и входные данные заставят его напрягаться? Какие данные могут обмануть процедуры проверки ошибок? Очевидно, это напрямую зависит от особенностей конкретного приложения.

Вариант – тур наглого американца, который использует стереотипы об иностранцах. Задавай глупые вопросы, старайся насолить, привлекай к себе внимание. Придумывайте препятствия и посмотрите, как с ними справится приложение. Имеет ли это смысл? Возможно и нет. Но ведь мы можем так сделать.

Интеллектуальный тур и его варианты могут помочь найти как действительно сложные и приоритетные ошибки, так и глупые ошибки. Нужно уметь различать их. Для этого необходимо создавать реальные случаи, чтобы в будущем было легче аргументировать то, что это важно и это нужно исправлять.

Тур FedEx

Думайте о данных, которые должны проходить через приложение. Данные начинают свой путь с ввода, далее хранятся во внутренних хранилищах и переменных, где часто происходит их обработка и изменение, а далее они могут подвергаться вычислениям. В конце большинство из таких данных предоставляются пользователю или куда-либо еще.

Нужно концентрироваться на данных. Нужно определить сохраненные данные и «проследить» их путь через приложение. Вот ввели вы, к примеру, адрес своей почты. А где он отображается? В каких местах? Попробуйте найти все области, с которыми соприкасаются данные. Определите весь их жизненный цикл.

Тур «после работы»

После денежной активности приложения, оно все еще продолжает работу. Это поддержка задач, архивация данных и файлов. Это может быть автоматическим процессом, но его также можно выполнять принудительно. Данный тур напоминает нам делать это.

Вариация тура – утреннее включение. Задача – тестирование начальных процедур и скриптов.

Тур уборщика

Уборщики – это такие ребята, которые знают округу даже лучше, чем здесь живущие или здешние полисмены. День за днем, улица за улицей.

Мы можем наметить места для методичной проверки интерфейса: экран за экраном, диалог за диалогом (преимущественно, по короткому пути) без детального тестирования. Только очевидные места.

Указанный тур включает выбор цели (все меню, ошибки, диалоговые окна, к примеру) и посещение каждой из них наиболее коротким путем.





2. Исторические районы

Это излюбленные туристами исторические места, места, окруженные историей. Сюда включены «legacy» код и функции и фичи, которые исторически содержали большое количество ошибок. «Legacy» код зачастую плохо понятен. Его использование и изменение подразумевает большое количество предположений. Именно на этом компоненте и сосредотачивается данный тур.

3. Туристические районы

Во многих городах есть места, которые интересны только туристам и пользователям-новичкам. Местные ребята избегают таких мест, поскольку им там тесно. То есть (прим. для ПО) пользователи, которые уже имеют опыт взаимодействия с приложением, подобные функции почти не используют.

4. Развлекательные районы

После изучения исторических и туристических мест, порой необходимо предоставить себе отдых, немного развлечься. В ПО также наличествует что-то похожее – дополнительный функционал. И нужно его проверить.

5. Районы отелей

В каждом туристическом городе должны быть места, где можно отдохнуть, восстановить силы, переждать непогоду. Но вот ПО в моменты отдыха пользователя совсем не отдыхает. И хорошо бы проверить что и как оно делает.

6. Захудалые районы

Это небезопасные район, которые, однако, для кое-кого представляют некоторый интерес. Там творятся плохие вещи, и, видимо, будет лучше не лезть туда. Всем, кроме тест-инженеров. Эти места должны быть протестированы, поскольку они могут содержать уязвимости продукта.

