3.3 Анализ тестирования и тест-дизайн

Анализ тестирования.
Представим, что мы тестируем интернет-магазин. Исходя из требований (базиса тестирования) мы понимаем, что именно нам нужно протестировать. Например, нам надо проверить, что пользователь может зарегистрироваться, войти в приложение, найти там товар, добавить его в корзину, после чего оплатить и получить.
Дальше, в рамках анализа тестирования, нам нужно определить следующие вещи:
1. Уровни тестирования — на сколько глубоко нам нужно протестировать каждое требование (Компонентное, интеграционное и системное тестирование);
2. Уровень детализации и качества наших требований;
3. Связи между требованиями;
4. Сложность нашего приложения;
5. Продуктовые и проектные риски;
6. Жизненный цикл разработки ПО и его длительность;
7. Инструменты по управлению тестированием (Test management system);
8. Опыт и постоянность команды;
9. Доступность для консультации других участников проекта.
Исходя из вышеописанных моментов, мы можем принять решение о том, на сколько глубоко нам надо тестировать конкретное требование и какой вид документации лучше всего применить.
Например, если проект представляет собой сложную систему, с высокими рисками и нестабильной командой — то необходимо будет выбрать наиболее подробный вид документации, скажем тест-кейс. Из-за высоких рисков и сложности тесты необходимо будет проектировать на всех уровнях и максимально детально. Благодаря максимально проработанным тестам новым членам команды будет намного проще войти в проект нежели при использовании менее детальной документации.
Главный принцип для выбора документации — это окупаемость этой самой документации.
Я думаю логика понята. Чем сложнее, рискованней, дольше и стабильней наш проект, тем глубже и детальнее нужно прорабатывать тесты.
Для простого проекта, с невысокими рисками и продолжительность, с не совсем стабильными требованиями и стабильной командой можно использовать высокоуровневую тестовую документацию, например чек-листы. В противном случае мы рискуем потратить большую часть времени на тест дизайн и поддержку документации, а не на выполнение тестов.
Иногда для проверки разных требований может применяться тестовая документация разных уровней.
Например, для сложного и рискового функционала — детальные тест кейсы, а для простого и нерискового — либо чек-лист.
Зачем делать анализ тестирования?
Можно выделить 2 больших достоинства анализа тестирования:
1. Создание ясности и гибкости в других активностях тестирования благодаря определению точных целей тестов. Мы знаем что именно и на сколько глубоко нужно тестировать.
2. Предотвращение дефектов: именно на этапе анализа тестирования проводится верификация и статическое тестирование.
После определения того, что мы будем делать, можно приступить к этапу создания тестов.

Проектирование тестов и Тест-дизайн.
